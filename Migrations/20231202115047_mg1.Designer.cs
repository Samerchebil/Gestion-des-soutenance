// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectFInalExam.Data;

#nullable disable

namespace ProjectFInalExam.Migrations
{
    [DbContext(typeof(PFEContext))]
    [Migration("20231202115047_mg1")]
    partial class mg1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProjectFInalExam.Models.Enseignant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Enseignant");
                });

            modelBuilder.Entity("ProjectFInalExam.Models.Etudiant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateN")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Etudiants");
                });

            modelBuilder.Entity("ProjectFInalExam.Models.PFE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EncadrantID")
                        .HasColumnType("int");

                    b.Property<int>("SocieteID")
                        .HasColumnType("int");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("EncadrantID");

                    b.HasIndex("SocieteID");

                    b.ToTable("PFE");
                });

            modelBuilder.Entity("ProjectFInalExam.Models.PFE_ETUDIANT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EtudiantId")
                        .HasColumnType("int");

                    b.Property<int>("PFEID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EtudiantId");

                    b.HasIndex("PFEID");

                    b.ToTable("PFE_ETUDIANT");
                });

            modelBuilder.Entity("ProjectFInalExam.Models.Societe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lib")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Societe");
                });

            modelBuilder.Entity("ProjectFInalExam.Models.Soutenance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Heure")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PFEID")
                        .HasColumnType("int");

                    b.Property<int?>("PresidentId")
                        .HasColumnType("int");

                    b.Property<int?>("RapporteurID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PFEID");

                    b.HasIndex("PresidentId");

                    b.HasIndex("RapporteurID");

                    b.ToTable("Soutenance");
                });

            modelBuilder.Entity("ProjectFInalExam.Models.PFE", b =>
                {
                    b.HasOne("ProjectFInalExam.Models.Enseignant", "Encadrant")
                        .WithMany("EncadrantPFES")
                        .HasForeignKey("EncadrantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectFInalExam.Models.Societe", "Societe")
                        .WithMany("PFES")
                        .HasForeignKey("SocieteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Encadrant");

                    b.Navigation("Societe");
                });

            modelBuilder.Entity("ProjectFInalExam.Models.PFE_ETUDIANT", b =>
                {
                    b.HasOne("ProjectFInalExam.Models.Etudiant", "Etudiant")
                        .WithMany("PFE_ETUDIANTS")
                        .HasForeignKey("EtudiantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectFInalExam.Models.PFE", "PFE")
                        .WithMany("PFE_ETUDIANTS")
                        .HasForeignKey("PFEID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Etudiant");

                    b.Navigation("PFE");
                });

            modelBuilder.Entity("ProjectFInalExam.Models.Soutenance", b =>
                {
                    b.HasOne("ProjectFInalExam.Models.PFE", "PFE")
                        .WithMany("Soutenances")
                        .HasForeignKey("PFEID");

                    b.HasOne("ProjectFInalExam.Models.Enseignant", "President")
                        .WithMany("SoutenancesAsPresident")
                        .HasForeignKey("PresidentId");

                    b.HasOne("ProjectFInalExam.Models.Enseignant", "Rapporteur")
                        .WithMany("SoutenancesAsRapporteur")
                        .HasForeignKey("RapporteurID");

                    b.Navigation("PFE");

                    b.Navigation("President");

                    b.Navigation("Rapporteur");
                });

            modelBuilder.Entity("ProjectFInalExam.Models.Enseignant", b =>
                {
                    b.Navigation("EncadrantPFES");

                    b.Navigation("SoutenancesAsPresident");

                    b.Navigation("SoutenancesAsRapporteur");
                });

            modelBuilder.Entity("ProjectFInalExam.Models.Etudiant", b =>
                {
                    b.Navigation("PFE_ETUDIANTS");
                });

            modelBuilder.Entity("ProjectFInalExam.Models.PFE", b =>
                {
                    b.Navigation("PFE_ETUDIANTS");

                    b.Navigation("Soutenances");
                });

            modelBuilder.Entity("ProjectFInalExam.Models.Societe", b =>
                {
                    b.Navigation("PFES");
                });
#pragma warning restore 612, 618
        }
    }
}
